// ignore_for_file: non_constant_identifier_names, camel_case_types, file_namesimport, file_names, unnecessary_null_comparison
// WARNING: This code is auto-generated by Supadart.
// WARNING: Modifications may be overwritten. Please make changes in the Supadart configuration.
import 'supadart_header.dart';

class Locations implements SupadartClass<Locations> {
  final BigInt id;
  final BigInt? cafeId;
  final double lat;
  final double lng;

  const Locations({
    required this.id,
    this.cafeId,
    required this.lat,
    required this.lng,
  });

  static String get table_name => 'locations';
  static String get c_id => 'id';
  static String get c_cafeId => 'cafe_id';
  static String get c_lat => 'lat';
  static String get c_lng => 'lng';

  static List<Locations> converter(List<Map<String, dynamic>> data) {
    return data.map(Locations.fromJson).toList();
  }

  static Locations converterSingle(Map<String, dynamic> data) {
    return Locations.fromJson(data);
  }

  static Map<String, dynamic> _generateMap({
    BigInt? id,
    BigInt? cafeId,
    double? lat,
    double? lng,
  }) {
    return {
      if (id != null) 'id': id.toString(),
      if (cafeId != null) 'cafe_id': cafeId.toString(),
      if (lat != null) 'lat': lat.toString(),
      if (lng != null) 'lng': lng.toString(),
    };
  }

  static Map<String, dynamic> insert({
    BigInt? id,
    BigInt? cafeId,
    required double lat,
    required double lng,
  }) {
    return _generateMap(
      id: id,
      cafeId: cafeId,
      lat: lat,
      lng: lng,
    );
  }

  static Map<String, dynamic> update({
    BigInt? id,
    BigInt? cafeId,
    double? lat,
    double? lng,
  }) {
    return _generateMap(
      id: id,
      cafeId: cafeId,
      lat: lat,
      lng: lng,
    );
  }

  factory Locations.fromJson(Map<String, dynamic> jsonn) {
    return Locations(
      id: jsonn['id'] != null
          ? BigInt.parse(jsonn['id'].toString())
          : BigInt.from(0),
      cafeId: jsonn['cafe_id'] != null
          ? BigInt.parse(jsonn['cafe_id'].toString())
          : BigInt.from(0),
      lat: jsonn['lat'] != null ? double.parse(jsonn['lat'].toString()) : 0.0,
      lng: jsonn['lng'] != null ? double.parse(jsonn['lng'].toString()) : 0.0,
    );
  }

  Map<String, dynamic> toJson() {
    return _generateMap(
      id: id,
      cafeId: cafeId,
      lat: lat,
      lng: lng,
    );
  }

  Locations copyWith({
    BigInt? id,
    BigInt? cafeId,
    double? lat,
    double? lng,
  }) {
    return Locations(
      id: id ?? this.id,
      cafeId: cafeId ?? this.cafeId,
      lat: lat ?? this.lat,
      lng: lng ?? this.lng,
    );
  }
}
